<?xml version="1.0" encoding="UTF-8"?>
<changeCreators>
	<changeCreator>
		<id>FinalVariable</id>
		<class>vn.dongpv.pde.refactoring.change.creator.FinalVariableChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>UseStringLengthCompareEmptyString</id>
		<class>vn.dongpv.pde.refactoring.change.creator.UseStringLengthCompareEmptyStringChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidUsingMathClassMethodsOnConstant</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidUsingMathClassMethodsOnConstantChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidConstructingPrimitiveType</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidConstructingPrimitiveTypeChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>ShouldBeStaticInnerClass</id>
		<class>vn.dongpv.pde.refactoring.change.creator.ShouldBeStaticInnerClassChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>FieldShouldBeStatic</id>
		<class>vn.dongpv.pde.refactoring.change.creator.FieldShouldBeStaticChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>UncalledPrivateMethod</id>
		<class>vn.dongpv.pde.refactoring.change.creator.UncalledPrivateMethodChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>UnusedVariable</id>
		<class>vn.dongpv.pde.refactoring.change.creator.UnusedVariableChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>BoxedPrimitiveJustCallToString</id>
		<class>vn.dongpv.pde.refactoring.change.creator.BoxedPrimitiveJustCallToStringChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>ConstantExpression</id>
		<class>vn.dongpv.pde.refactoring.change.creator.ConstantExpressionChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidUnnecessarySubstring</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidUnnecessarySubstringChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>UseSingleQuotesWhenConcatenatingCharacterToString</id>
		<class>vn.dongpv.pde.refactoring.change.creator.UseSingleQuotesWhenConcatenatingCharacterToStringChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidEmptyLoops</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidEmptyLoopsChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AlwaysReuseImmutableConstantObjectsForBetterMemoryUtilization</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AlwaysReuseImmutableConstantObjectsForBetterMemoryUtilizationChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidEmptyIf</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidEmptyIfChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidEmptyStaticInitializer</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidEmptyStaticInitializerChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidSynchronizedModifierInMethod</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidSynchronizedModifierInMethodChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidInstantiationForGetClass</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidInstantiationForGetClassChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>UseStringEqualsIgnoreCase</id>
		<class>vn.dongpv.pde.refactoring.change.creator.UseStringEqualsIgnoreCaseChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidEmptyTryBlocks</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidEmptyTryBlocksChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidUsingThreadYield</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidUsingThreadYieldChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidEmptySynchronizedBlock</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidEmptySynchronizedBlockChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidEmptyFinallyBlock</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidEmptyFinallyBlockChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>UseShiftOperators</id>
		<class>vn.dongpv.pde.refactoring.change.creator.UseShiftOperatorsChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>AvoidMethodCallsInLoop</id>
		<class>vn.dongpv.pde.refactoring.change.creator.AvoidMethodCallsInLoopChangeCreator</class>
	</changeCreator>
	<changeCreator>
		<id>UseShortCircuitBooleanOperators</id>
		<class>vn.dongpv.pde.refactoring.change.creator.UseShortCircuitBooleanOperatorsChangeCreator</class>
	</changeCreator>
</changeCreators>